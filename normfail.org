#+TITLE:Normal Eigenvalue Probabilities 
#+AUTHOR: John Haman
#+email: jthaman@bgsu.edu
#+INFOJS_OPT: 
#+PROPERTY: header-args:R :session *R* :cache yes :results output :exports both :tangle yes 
#+PANDOC_OPTIONS: self-contained:t 

Find the R code at:
https://github.com/jth005/NormalEigen
Testing the composite hypothesis data \sim Normal. Previous pp-Plots
were incorrect because the data were centered and scaled, and then the
simple hypothesis H_0: data $\sim N(0,1)$ was tested.

#+BEGIN_SRC R 
library(CompQuadForm)
library(energy)

EYY <- function(){(2) / sqrt(pi)}

ExY <- function(dat){
    n <- length(dat)
    store <- rep(0,n)
    for(i in 1:n){
       store[i] <- 2*(dat[i]) * pnorm(dat[i], mean=0, sd=1) + 2 * dnorm(dat[i], mean=0, sd=1)   
    }
    return(store)
}
#+END_SRC

#+RESULTS[4cee1b94425b1f0db1cc86535862df88345577b6]:

Define the function that computes the Kernel matrix and returns the
Eigenvalues of that matrix. The kernel matrix is symmetric. First we
need to center and scale the data.

#+BEGIN_SRC R
norm.kernel <- function(dat, mu=NULL, sigma=NULL){
    n <- length(dat)
    if(is.null(mu) == TRUE)
        mu <- mean(dat)
    if(is.null(sigma) == TRUE)
        sigma <- sd(dat)
    dat <- (dat - mu)/sigma
    lilDist <- ExY(dat)
    bigDist <- EYY()
    kmat <- matrix(0,n,n)
    for(i in 1:n){
        for(j in i:n){
            kmat[i,j] <- (1/n) * (lilDist[i] + lilDist[j] - bigDist - abs(dat[i] - dat[j])) 
            kmat[j,i] <- kmat[i,j]
        }
    }
    estat <- normal.e(dat)
    eigs <- eigen(kmat, only.values=TRUE, symmetric=TRUE)$values
    return(list(estat = estat, eigs = eigs))
}
#+END_SRC

#+RESULTS[b749bc943d9da73eb7b44b05d8da13939417c085]:

Produce a PP-plot to compare the empirical distribution of the energy
statistics in the composite Normal test versus the distribution
determined by the Eigenvalue method.

#+BEGIN_SRC R :results graphics :file EVpp.png
  M <- 300
  save.estat <- rep(0,M)
  eig.probs <- rep(0,M)
  empirical.probs <- rep(0,M)

  for (i in 1:M){
      dat <- rnorm(100)
      xx <- norm.kernel(dat) 
      save.estat[i] <- xx$estat
      eig.probs[i] <- 1 - imhof(xx$estat, lambda = xx$eigs[1:70])$Qq
  }

  for (i in 1:M){
      empirical.probs[i] <- sum(save.estat <= save.estat[i])/M
  }

  plot(empirical.probs, eig.probs, xlim = c(0,1), ylim = c(0,1));abline(coef=c(0,1))
#+END_SRC

#+RESULTS[3d8ea496eda44a2da9dcb91274847f7b4b73d1ab]:
[[file:EVpp.png]]

Similar plots are obtained when parameters of the Normal distribution are changed.

Compute the Eigenvalues of the kernel matrix. Clearly the EVs are too
big, the largest EV alone is bigger than E|Y-Y'|.

#+BEGIN_SRC R
dat <- rnorm(100)
my.eigs<- norm.kernel(dat)$eigs[1:30]
head(my.eigs)
#+END_SRC

#+RESULTS[1aa6463ada4c9be1ae9a0bdf2d8d60ba938673a5]:
: [1] 1.34002345 0.18173950 0.11284838 0.05103024 0.03480765 0.02251303

Smoothness of the eigenvalues:

#+BEGIN_SRC R :results graphics :file smooth.png
plot(log(my.eigs))
#+END_SRC

#+RESULTS[4c30b537afc3394441b51ad09fe16b9c5791e7fe]:
[[file:smooth.png]]

